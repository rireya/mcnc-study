** 교육시 AI도 활용하는 걸 고려해서 교육 자료 생성 필요
** 교육은 1시간씩만 하며 교육 자료에는 중요 내용만 적어두고 세부적인 내용은 직접 찾아보도록 유도
** 교육시간과 Q&A, 다음 세션 안내는 필요 없음.
** 질문 필요한 경우 대상자 정보는 다음과 같음 : 프로젝트수행팀 최명훈 (mhchoi@mcnc.co.kr)
** 교육을 받는 대상자는 컴퓨터공학 학사 과정을 끝냈으며, 실제 앱 유지보수를 1년 정도는 한 상태로 가정

- 개발 로드맵
처음에는 자료구조(파이썬으로), 네트워크(HTTP)는 필수로 공부하며 알고리즘은 관심 정도만 가져도 됨
(비전공자는 정보처리기사를 공부 해보면 됨. 자격증 따는건 개인 판단)
=> 해당 내용들은 개발을 오래 할 수록 필요해지기 때문에 미리 조금씩 관심 가지고 공부하기
FE 개발자지만 HTML과 CSS 공부는 최소 한번은 해두는걸 추천
JavaScript 공부하면서 TypeScript도 같이 공부
jQuery는 어느정도는 알아두는걸 추천
(기존 앱 유지보수 및 bizMOB3.5 프로젝트 투입시 필요)
SPA 개발을 위해 React나 Vue 중 하나는 선택해서 공부
(bizMOB4를 위해선 vue를 추천)
(SSR 개념도 알아두는게 좋음)
추가로 router와 상태관리 라이브러리도 같이 공부
git 공부를 통해서 소스 관리 부분에 대해서 알아야 하며 github도 관리 하는게 좋음
(소그 관리 전략은 너무 어려울 필요는 없으며 github flow 정도로만 해서 알아만 둬도 좋음)

- 내 경험을 중심으로 고민했던 내용을 공유 (?)
- 처음에 내 작업이력 보여주고 이런식으로 미리 정리를 하라고 추천
- 비즈몹 없이 fe 중심
- 주석과 네임컨벤션으로 시작
- css와 네트워크 공부도 추천
- 코드 작성시 구버전 호환 고민
- 너무 어렵게 짜지 마라 (유지보수 고려. 기능구현뿐만 아니라 코드관리 측면도 생각해야됨)
- 연차 높다고 다 아는게 아니기에 설명시 쉽게 설명
- 문제 발생시 어떻게 할까요와 함께 어떻게 하는게 좋을지 몇가지 제안을 주는 것도 좋음
- 기획서 볼 때 주의할 점
- 크롭 탭 교육
- 버그 없도록 짜는게 중요하다 자체 테스트는 꼭 햆기(개발 속도가 느릴지언정)
- 주석은 변수와 분기 사유, 함수 동작은 필수급
- 소스는 내손을 떠난다고 끝이 아니기에 남이 보는걸 가정하고 작성 (주석과 복잡도 문제)
- 테스트 가능환경을 만드는건 매우 중요하며 서버를 기다리지 말고 혼자 테스트할 방법을 생각하라
- 내가 이해한게 맞는지 정리해서 다시 물어보는 습관
- 무엇이든 종료된 후에는 자체 피드백
- 신기술 항상 열린 마음으로 알아보기 (간단하게라도)
- 혼자서 모든걸 할 순 없다. 일을 나누는 것도 실력
(믿고 맡기기)
- FE는 갈수록 고객과 접점이 많아짐. 그리고 자주 수정이 발생할 수 있기 때문에 금방금방 대응을 해야됨.
그리고 FE 는 개발에서 가장 마지막 부분이며 고객과 바로 소통하게 될 영역이기 때문에 중요함
- 네스팅이 3단계 이상 안되도록 고려 하면서 코드 작성
- ai는 검색 도구 정도로 사용하는걸 추천 (나중에는 알아서 사용)
- 개발은 결국 팀전이기 때문에 커뮤니케이션 능력도 중요
(주요 대화자 : 나 <> FE 개발자, 나 <> BE 개발자, 나 <> 퍼블리셔, 나 <> 기획자, 나 <> PM)
(보통 대화자 : 나 <> 디자이너, 나 <> 고객)
- 모바일 웹과 PC 웹 구현시에는 어느 부분을 중요시 하냐가 다름
(모바일웹 회사기 때문에 화면 흐름과 사용자 UX 고려가 필수. 해당 내용은 기획서에 표현 안될 때가 많음)
(다양한 모바일 앱을 써보면서 경험해 보는걸 추천. 특히 모바일 특화 앱은 설치해두고 참고하기 좋음)