** 교육시 AI도 활용하는 걸 고려해서 교육 자료 생성 필요
** 교육은 2시간씩 주에 2일간 2주 진행
** 교육시간과 Q&A, 다음 세션 안내는 필요 없음.
** 질문 필요한 경우 대상자 정보는 다음과 같음 : 프로젝트수행팀 최명훈 (mhchoi@mcnc.co.kr)

##  1차 : bizMOB4 개요 및 config

- bizmob 3.5 는 빌드 없이 정적 파일을 배포하는 방식
- 정적 파일을 배포하기 때문에 브라우저 호환성에 대해서 코드 레벨에서 신경을 써야 했음
- 그래서 jQuery를 통해서 다양한 브라우저 환경에서 호환이 되도록 개발
- 하지만 에뮬레이터 존재로 IDE가 이클립스로 제한되고 jQuery도 점유율이 내려가면서 커뮤니티 규모가 축소되고 있는 상황
- 초기 bizmob4를 react와 vue 중 어떤 것으로 할지 고민 중 vue가 퍼블리셔, FE 개발자가 분업화 되있는 상황에 더 맞자고 판단하여 vue를 선택
- vue를 기반으로 하는 SSR인 Nuxt.js는 모바일 하이브리드 앱 구조와는 맞지 않아서 Vue 로 개발 진행
- Ionic을 사용하여 기본 view 레이아웃을 구성하고, bizmob 라이브러리를 통해서 native 앱과 브릿지 통신을 함
- bizmob 4 에서는 SPA 환경을 각 화면의 네비게이션 flow와 modal 등을 고려하여 설계해야 함
- 기존 처럼 bizmob 서버와 직접 통신하면 세션 문제로 same-site 문제가 발생 (최신 브라우저에서는 설정으로 off를 못함)
- spa 환경에서는 개발 서버인 프록시 서버를 통해서 bizmob 서버와 통신을 해서 same-site 문제를 해결 (bizmob 3.5 에서도 프록시 서버를 만들 경우 해결 가능)
- 최신 FE 개발 환경에 최적화된 IDE인 VSCode 또는 Cursor IDE를 사용하는 것을 추천
- config 정보는 base 앱 프로젝트의 README.md 파일에 포함되어 있음

##  2차 : 초기 클라이언트 아키텍처 설계시 주의점

- 폴더 구조에 대한 고민 => 개발양이 많아질 수록 복잡해지기 때문에 처음에 구조를 잘 잡아야 함
(폴더 구조 부터 상태 관리 구조, 공통 컴포넌트 설계 등)
- 구조화는 너무 복잡하면 오히려 하나 수정할 때 확인할 부분이 너무 많아지기 때문에 적당한 수준으로 유지해야 함
- SI 프로젝트의 구조상 FE는 초기에 일이 적은 편 => 초기 작업의 중요성을 간과해서는 안됨
(미리 라이브러리 테스트용 화면을 만들거나 외부 UI 라이브러리 사용시 퍼블리싱 요청을 위한 샘플 화면 제작 등)
- 초기에는 구조화와 사용될 라이브러리를 찾거나 테스트 환경을 미리 구성을 해둬야 함
(라이브러리를 찾을 때 지원 가능 버전과 앱 최소 지원 버전에 대한 비교 필요)
(서버 없이 개발을 바로 진행할 수 있고 서버 완료 후에도 마이그레이션 작업에 큰 리소스가 소모 되지 않도록 구성)
- config 설정인 vite.config와 tsconfig의 중요성을 인식해야 함 (초기 설정이 향후 개발에 큰 영향을 미침)
- 어느정도 구조화 된 이후에는 프로젝트 안정화 작업이 필요
(빌드 후 배포 테스트, 코드 스니펫 작성 등)
- 앱 타겟에 따른 초기 고려 사항에 대한 설계가 필요
(글로벌인 경우 다국어와 텍스트 길이, 날짜 등)
- 기획서를 확인 후 모바일 하이브리드 웹 구조상 이슈가 될 부분이 있는지 미리 파악 필요
(최소 앱 지원 버전, 네비게이션 구조, iOS 하단 버튼 고정 이슈 등)
- 어느정도 구조가 잡힌 후에는 공통 유틸 및 함수를 설계 해야 함 (후에 개발 속도와 연관)

##  3차 : bizMOB4 라이브러리 및 제공 컴포저블
##  4차 : 실무에서 AI 활용 방안



- 비즈몹 3.5부터 시작해서 어떻게 현재의 모습이 되었는지
- 지원 버전에 대한 고민
- 스토어, 라우터, api, 공통함수, 공통컴포넌트
- 너무 깊은 구조화는 오히려 독이 될 수 있다
- 폴더 구조에 대한 고민
- vite.config 와 tsconfig 중요성
- si 구조상 초기 작업의 중요성
(초반에 일이 적기 때문에 이때 미래를 대비해야함)
- 과제로는 폴더 구조 및 공통 함수 구조 작성
(확인 후 토의할만한데 있는 것만 언급)
- 아이오닉을 추가하게 된 이유
(그 외 라이브러리별로 추가된 이유)
- 프록시 서버의 필요성과 이해
- 커서 IDE와 VScode 소개. 커서 IDE를 사용한 셋업
(SI 환경에 따라선 IDE 에이전트 막힐 수 있다는걸 얘기)
(IDE 교육 같은데 필요하다면 물어본후 짧게라도 진행?)
- ai도두 활용 가이드 문서 소개

- ionic은 ui 컴포넌트만 설치해서 사용
(하이브리드앱 부분은 회사가 bizmob을 만들기 때문)
-  ai 에이전트를 통해서 제작시 필요한 공통함수가 있는 파악해보기
- 커서 ide로 ai 에이전트 모드를 활용한 개발 방법에 대한 설명
- 1주타는 ai 에이전트 없이 하고 공통함수 생각해오면
2주차에는 커서 ide로 실습
- 2주차 시작전에 AI 에이전트 모드 사용 물어보기